{"version":3,"sources":["components/Modal/Modal.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","App.js","services/fetchApi.js","index.js"],"names":["modalRoot","document","getElementById","Modal","content","onClose","useEffect","window","addEventListener","handleKeydown","removeEventListener","e","code","createPortal","className","onClick","target","currentTarget","src","alt","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","handleSubmit","preventDefault","trim","toast","type","autoComplete","autoFocus","placeholder","value","onChange","toLowerCase","ImageGalleryItem","id","webformatURL","tags","onItemClick","modalContent","ImageGallery","images","map","image","Button","onLoadMoreClick","Spinner","color","height","width","timeout","App","status","setStatus","output","setOutput","showModal","setShowModal","setModalContent","page","setPage","setError","hideLoadMoreBtn","setHideLoadMoreBtn","isLoading","setIsLoading","getImages","search","queryString","encodeURIComponent","fetch","then","res","json","fetchImages","hits","length","toggleLoadMoreBtn","handleScroll","catch","error","finally","scrollTo","top","documentElement","scrollHeight","behavior","showBtn","toggleModal","result","itemId","element","find","largeImageURL","prev","autoClose","position","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.baa0cf0f.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport \"./Modal.css\";\nimport PropTypes from \"prop-types\";\n\nconst modalRoot = document.getElementById(\"modal-root\");\n\nexport default function Modal({ content, onClose }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeydown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeydown);\n    };\n  });\n\n  const handleOverlayClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  const handleKeydown = (e) => {\n    if (e.code === \"Escape\") {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleOverlayClick}>\n      <div className=\"Modal\">\n        <img src={content} alt=\"\" />\n      </div>\n    </div>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  content: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};","import \"./Searchbar.css\";\nimport { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport { ImSearch } from \"react-icons/im\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport default function Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (searchQuery.trim() === \"\") {\n      toast(\"Please enter search query\");\n      return;\n    }\n    onSubmit(searchQuery);\n  };\n\n  const handleQueryChange = (e) => {\n    setSearchQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button\n          type=\"button\"\n          className=\"SearchForm-button\"\n          onClick={handleSubmit}\n        >\n          <ImSearch />\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          onChange={handleQueryChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import PropTypes from \"prop-types\";\nimport \"./ImageGalleryItem.css\";\n\nexport default function ImageGalleryItem({\n  id,\n  webformatURL,\n  tags,\n  onItemClick,\n}) {\n  const modalContent = (id) => {\n    onItemClick(id);\n  };\n\n  return (\n    <img\n      src={webformatURL}\n      alt={tags}\n      className=\"ImageGalleryItem-image\"\n      onClick={() => modalContent(id)}\n    />\n  );\n}\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  onItemClick: PropTypes.func.isRequired,\n};","import \"./ImageGallery.css\";\nimport ImageGalleryItem from \"../ImageGalleryItem\";\nimport PropTypes from \"prop-types\";\n\nexport default function ImageGallery({ images, onItemClick, onClick }) {\n  const handleOpenModal = (e) => {\n    if (e.target !== e.currentTarget) {\n      onClick();\n    }\n  };\n  return (\n    <ul className=\"ImageGallery\" onClick={handleOpenModal}>\n      {images &&\n        images.map((image) => (\n          <li key={image.id} className=\"ImageGalleryItem\">\n            <ImageGalleryItem {...image} onItemClick={onItemClick} />\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  onClick: PropTypes.func.isRequired,\n  onItemClick: PropTypes.func.isRequired,\n};","import PropTypes from \"prop-types\";\nimport \"./Button.css\";\n\nexport default function Button({ onLoadMoreClick }) {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onLoadMoreClick}>\n      Load More\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onLoadMoreClick: PropTypes.func.isRequired,\n};","import Loader from \"react-loader-spinner\";\n\nexport default function Spinner() {\n  return (\n    <div>\n      <Loader\n        type=\"Hearts\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport Modal from \"./components/Modal\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from \"./components/Button\";\nimport { fetchImages, PER_PAGE } from \"./services/fetchApi\";\nimport Spinner from \"./components/Loader\";\n\nexport default function App() {\n  const [status, setStatus] = useState(\"idle\");\n  const [output, setOutput] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [modalContent, setModalContent] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(false);\n  const [hideLoadMoreBtn, setHideLoadMoreBtn] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    getImages();\n  }, [searchQuery, page]);\n\n  const getImages = () => {\n    setIsLoading(true);\n    fetchImages(searchQuery, page)\n      .then(({ hits }) => {\n        if (hits.length === 0) {\n          setStatus(\"rejected\");\n          return;\n        }\n        if (hits.length < PER_PAGE) {\n          toggleLoadMoreBtn();\n        }\n        setOutput([...output, ...hits]);\n        handleScroll();\n        setStatus(\"resolved\");\n      })\n      .catch((error) => setError(error))\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  const showBtn =\n    output.length > 0 && status !== \"rejected\" && !hideLoadMoreBtn;\n\n  const toggleLoadMoreBtn = () => {\n    setHideLoadMoreBtn(!hideLoadMoreBtn);\n  };\n\n  const handleFormSubmit = (searchQuery) => {\n    setSearchQuery(searchQuery);\n    setPage(1);\n    setOutput([]);\n    setHideLoadMoreBtn(false);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const modalContentShow = (itemId) => {\n    const element = output.find(({ id }) => id === itemId);\n    setModalContent(element.largeImageURL);\n  };\n\n  const handleLoadMoreBtnClick = () => {\n    setPage((prev) => prev + 1);\n  };\n\n  let result = null;\n  if (status === \"idle\") {\n    result = (\n      <div className=\"TextBlock\">\n        <h2>Enter search query</h2>\n      </div>\n    );\n  }\n\n  if (status === \"pending\") {\n    result = (\n      <div className=\"Wrapper\">\n        <Spinner />\n      </div>\n    );\n  }\n\n  if (status === \"rejected\") {\n    result = (\n      <div className=\"TextBlock\">\n        <h2>Nothing was found on your query. Please try again</h2>\n      </div>\n    );\n  }\n\n  if (status === \"resolved\") {\n    result = (\n      <ImageGallery\n        images={output}\n        onClick={toggleModal}\n        onItemClick={modalContentShow}\n      />\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={handleFormSubmit} />\n      {result}\n      {isLoading && (\n        <div className=\"Wrapper\">\n          <Spinner />\n        </div>\n      )}\n      {showBtn && (\n        <div className=\"Wrapper\">\n          <Button onLoadMoreClick={handleLoadMoreBtnClick} />\n        </div>\n      )}\n      {showModal && <Modal content={modalContent} onClose={toggleModal} />}\n      <ToastContainer autoClose={5000} position=\"top-center\" />\n    </div>\n  );\n}","const APP_KEY = \"24167481-0dfdd643baa4ca7b2ab61bff5\";\nexport const PER_PAGE = 12;\nconst URL = \"https://pixabay.com/api/?key=\";\n\nexport function fetchImages(search, page) {\n  const queryString = `${URL}${APP_KEY}&q=${encodeURIComponent(\n    search\n  )}&per_page=${PER_PAGE}&page=${page}&image_type=photo&orientation=horizontal`;\n\n  return fetch(queryString).then((res) => res.json());\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}